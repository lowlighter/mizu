{
  "description": "Lightweight HTML templating library for any-side rendering",
  "keywords": ["html", "templating", "ssr", "csr", "ssg", "reactive"],
  "license": "AGPLv3",
  "author": "Simon Lecoq (@lowlighter)",
  "funding": "https://github.com/sponsors/lowlighter",
  "homepage": "https://github.com/lowlighter/mizu",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lowlighter/mizu.git"
  },
  "tasks": {
    // Linting tasks
    "lint": {
      "description": "Lint code, documentation, package and formatting",
      "command": "sleep 0",
      "dependencies": ["lint:code", "lint:doc", "lint:pkg", "lint:fmt"]
    },
    "lint:code": {
      "description": "Lint code",
      "command": "cd $INIT_CWD && deno lint"
    },
    "lint:doc": {
      "description": "Lint documentation",
      "command": "cd $INIT_CWD && deno doc --lint @mizu/**/*.ts"
    },
    "lint:pkg": {
      "description": "Lint package",
      "command": "cd $INIT_CWD && deno publish --quiet --dry-run --allow-dirty"
    },
    "lint:fmt": {
      "description": "Check code formatting",
      "command": "cd $INIT_CWD && deno fmt --check"
    },
    // Testing tasks
    "test": {
      "description": "Test code and print detailed coverage",
      "command": "cd $INIT_CWD && deno coverage --detailed --include=$INIT_CWD",
      "dependencies": ["test:deno", "test:node", "test:bun"]
    },
    "test:deno": {
      "description": "Test code (deno)",
      "command": "cd $INIT_CWD && deno test --allow-read --allow-env --allow-net --parallel --doc --clean --coverage"
    },
    "test:node": {
      "description": "Test code (node)",
      "command": "cd $INIT_CWD && npm test"
    },
    "test:bun": {
      "description": "Test code (bun)",
      "command": "cd $INIT_CWD && bun test"
    },
    // Building tasks
    "build": {
      "description": "Build project",
      "command": "sleep 0",
      "dependencies": ["build:readmes", "build:www"] //, "build:coverage"]
    },
    "build:readmes": {
      "description": "Build `README.md` from `mod.html`",
      "command": "deno run --quiet --allow-read --allow-env --allow-write=@mizu,README.md --allow-run=deno --allow-sys=osRelease .github/tools/mod_html_to_readme_md.ts $INIT_CWD"
    },
    "build:www": {
      "description": "Build website",
      "command": "deno run --quiet --allow-read --allow-env --allow-net --allow-run --allow-write=/tmp,www/.pages --allow-sys=osRelease --location=http://localhost:4649 www/build.ts",
      "dependencies": ["build:clean"]
    },
    "build:coverage": {
      "description": "Build coverage report",
      "command": "deno test --allow-read --allow-env --allow-net --parallel --clean --coverage; rm -rf www/.pages/coverage && deno coverage --html && mv coverage/html www/.pages/coverage && deno run --quiet --allow-read --allow-net=img.shields.io --allow-write=www/.pages/coverage jsr:@libs/bundle/ts/cli/coverage --root=www/.pages/coverage",
      "dependencies": ["build:clean"]
    },
    "build:clean": {
      "description": "Clean build artifacts",
      "command": "rm -rf www/.pages && mkdir -p www/.pages"
    },
    // Deployment tasks
    "deploy:setup-github-actions": {
      "description": "",
      "command": "deno run --allow-env --allow-read --allow-write=.imports_map.json,/home/runner/work/_temp .github/tools/github_actions_deno_deploy.ts",
      "dependencies": ["build"]
    },
    "deploy:preview": {
      "description": "Deploy website (preview)",
      "command": "deno run --allow-sys --allow-env --allow-read --allow-net=cdn.deno.land,dash.deno.com --no-prompt jsr:@deno/deployctl deploy",
      "dependencies": ["build"]
    },
    "deploy:prod": {
      "description": "Deploy website (production)",
      "command": "deno run --allow-sys --allow-env --allow-read --allow-net=cdn.deno.land,dash.deno.com --no-prompt jsr:@deno/deployctl deploy --prod",
      "dependencies": ["build"]
    },
    // Development tasks
    "qa": {
      "description": "Test and lint code",
      "command": "sleep 0",
      "dependencies": ["lint", "test:deno"]
    },
    "serve": {
      "description": "Serve website locally",
      "command": "deno serve --allow-read --allow-env --allow-net --allow-run --allow-write=/tmp --allow-sys=osRelease --port=4649 --location=http://localhost:4649 www/serve.ts"
    },
    // Miscellaneous tasks
    "repo:fill-scopes": {
      "description": "Update repository issue templates",
      "command": " deno run --allow-read --allow-write=.github/ISSUE_TEMPLATE --allow-run=deno .github/tools/fill_github_scopes.ts"
    },
    "render:mermaid": {
      "description": "Render mermaid diagrams",
      "command": "deno run --allow-read --allow-net=127.0.0.1,localhost,cdn.jsdelivr.net --allow-write=www/static/rendering.svg --allow-run=$(deno task resolve:browser-path) .github/tools/generate_mermaid.ts www/misc/rendering.mermaid www/static/rendering.svg"
    },
    "resolve:browser-path": {
      "description": "Resolve browser path for astral",
      "command": "ASTRAL_QUIET_INSTALL=1 deno run --allow-env=ASTRAL_QUIET_INSTALL --allow-read --allow-net=googlechromelabs.github.io,storage.googleapis.com --allow-write=.cache .github/tools/browser_path.ts"
    }
  },
  "imports": {
    // Dependencies
    "@libs/markdown": "jsr:@libs/markdown@^2.0.2",
    "@libs/reactive": "jsr:@libs/reactive@^5.0.2",
    "@libs/typing": "jsr:@libs/typing@^3.1.2",
    "@libs/xml": "jsr:@libs/xml@^6.0.4",
    "@std/assert": "jsr:@std/assert@^1.0.9",
    "@std/async": "jsr:@std/async@^1.0.9",
    "@std/html": "jsr:@std/html@^1.0.3",
    "@std/io": "jsr:@std/io@~0.225.0",
    "@std/path": "jsr:@std/path@^1.0.8",
    "@std/regexp": "jsr:@std/regexp@^1.0.0",
    "jsdom": "npm:jsdom@^25.0.1",
    // Deno deploy dependencies
    "@libs/bundle/ts": "jsr:@libs/bundle@^12.6.3/ts",
    "@libs/typing/func": "jsr:@libs/typing@^3.1.2/func",
    "@std/http/unstable-route": "jsr:@std/http@^1.0.12/unstable-route",
    "@std/html/unstable-is-valid-custom-element-name": "jsr:@std/html@^1.0.3/unstable-is-valid-custom-element-name",
    // Development dependencies
    "@dprint/formatter": "jsr:@dprint/formatter@^0.4.1",
    "@libs/testing": "jsr:@libs/testing@^4.0.1",
    "@std/fmt": "jsr:@std/fmt@^1.0.3",
    // Development server dependencies
    "@www/": "./www/",
    "@deno/doc": "jsr:@deno/doc@^0.161.3",
    "@libs/bundle": "jsr:@libs/bundle@^12.6.3",
    "@libs/logger": "jsr:@libs/logger@^3.1.3",
    "@lowlighter/std-http": "jsr:@lowlighter/std-http@^1.0.11",
    "@std/collections": "jsr:@std/collections@^1.0.9",
    "@std/http": "jsr:@std/http@^1.0.12",
    "@std/jsonc": "jsr:@std/jsonc@^1.0.1",
    "@std/text": "jsr:@std/text@^1.0.9",
    // Tooling dependencies
    "@tools/": "./.github/tools/",
    "@actions/core": "npm:@actions/core@^1.11.1",
    "@astral/astral": "jsr:@astral/astral@~0.5",
    "@libs/run": "jsr:@libs/run@^3.0.2",
    "@std/fs": "jsr:@std/fs@^1.0.6",
    "@std/yaml": "jsr:@std/yaml@^1.0.5"
  },
  "workspace": [
    "@mizu/bind",
    "@mizu/clean",
    "@mizu/code",
    "@mizu/custom-element",
    "@mizu/eval",
    "@mizu/event",
    "@mizu/for",
    "@mizu/html",
    "@mizu/http",
    "@mizu/if",
    "@mizu/internal",
    "@mizu/is",
    "@mizu/markdown",
    "@mizu/mizu",
    "@mizu/model",
    "@mizu/mustache",
    "@mizu/once",
    "@mizu/ref",
    "@mizu/refresh",
    "@mizu/render",
    "@mizu/set",
    "@mizu/show",
    "@mizu/skip",
    "@mizu/test",
    "@mizu/text",
    "@mizu/toc",
    "@mizu/unstable"
    // https://github.com/lucacasonato/esbuild_deno_loader/issues/156
    // "@mizu/*"
  ],
  "nodeModulesDir": "auto",
  "fmt": {
    "semiColons": false,
    "lineWidth": 280,
    "exclude": [
      ".cache",
      "www/.pages",
      "**/coverage",
      "**/node_modules"
    ]
  },
  "lint": {
    "rules": {
      "include": [
        "ban-untagged-todo",
        "eqeqeq",
        "no-console",
        "no-eval",
        "no-external-import",
        "no-inferrable-types",
        "no-sync-fn-in-async-fn",
        "no-throw-literal",
        "single-var-declarator",
        "triple-slash-reference"
      ],
      "exclude": [
        "no-window"
      ]
    },
    "exclude": [
      ".cache",
      "www/.pages",
      "www/html/mizu/examples/bun",
      "www/html/mizu/examples/node",
      "**/coverage",
      "**/node_modules"
    ]
  },
  "publish": {
    "exclude": [
      ".devcontainer/**",
      ".github/**",
      "@mizu/**/*.html",
      "@mizu/**/*_test.ts",
      "www/**",
      "CONTRIBUTING.md",
      "vercel.json"
    ]
  },
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.iterable",
      "deno.ns"
    ],
    "useUnknownInCatchVariables": false
  },
  "deploy": {
    "project": "eef27b1b-755a-4828-bf83-a073e41e5677",
    "entrypoint": "www/serve.ts",
    "include": [
      ".imports_map.json",
      "@mizu/**",
      "www/.pages/**",
      "www/api/**",
      "www/*.ts",
      "**/deno.jsonc"
    ],
    "exclude": [
      "@mizu/**/*.html",
      "@mizu/**/*_test.ts",
      "@mizu/**/README.md",
      "@mizu/**/coverage",
      "@mizu/**/node_modules",
      "www/build.ts",
      "coverage",
      "**/node_modules"
    ]
  }
}
