{
  "description": "Lightweight HTML templating library for any-side rendering",
  "keywords": ["html", "templating", "ssr", "csr", "ssg", "reactive"],
  "license": "AGPLv3",
  "author": "Simon Lecoq (@lowlighter)",
  "funding": "https://github.com/sponsors/lowlighter",
  "homepage": "https://github.com/lowlighter/mizu",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lowlighter/mizu.git"
  },
  "tasks": {
    // Lint code, documentation, package and formatting
    // - `--check`: skip actual formatting (check only)
    "lint": "cd $INIT_CWD && deno lint && deno doc --lint **/mod.ts && deno publish --quiet --dry-run --allow-dirty && deno fmt",
    // Test code and print detailed coverage
    "test": "cd $INIT_CWD && deno task --cwd=$INIT_CWD test:only --doc --clean --coverage && deno coverage --detailed --include=$INIT_CWD",
    // Test code (without any options)
    "test:only": "deno test --allow-read --allow-env --allow-net --parallel",
    // Generate local `README.md` from `mod.html`
    "doc:html-to-md": "deno run --allow-read --allow-env --allow-write=./@mizu --allow-run=deno .github/tools/mod_html_to_readme_md.ts $INIT_CWD",
    // Test and lint code
    "qa": "deno task test && deno task lint && deno task doc:html-to-md",
    // Cache dependencies
    "cache": "deno cache **/mod.ts www/*.ts && deno test --no-run",
    // Serve website locally
    "serve": "deno serve --allow-read --allow-env --allow-net --allow-run --allow-write=/tmp --port=4649 --location=http://localhost:4649 --watch www/serve.ts",
    // Build project
    "build": "deno task build:clean && deno task build:www && deno task build:coverage",
    // Clean build artifacts
    "build:clean": "rm -rf .pages && mkdir -p .pages",
    // Build website
    "build:www": "deno run --allow-read --allow-env --allow-net --allow-run --allow-write=.pages,/tmp --location=http://localhost:4649 www/build.ts",
    // Build coverage report
    "build:coverage": "deno task test:only --filter='/DENO/' --clean --coverage --fail-fast --reporter=dot && deno coverage --html && mv coverage/html .pages/coverage && deno run --allow-read --allow-net=img.shields.io --allow-write=.pages/coverage jsr:@libs/bundle/ts/cli/coverage --root=.pages/coverage",
    // Update repository issue templates
    "repo:issue-templates": " deno run --allow-read --allow-write=.github/ISSUE_TEMPLATE --allow-run=deno .github/tools/fill_issue_templates.ts"
  },
  "imports": {
    // Aliases
    "@www/": "./www/",
    "@tools/": "./.github/tools/",
    // Standard library dependencies
    "@std/assert": "jsr:@std/assert@1",
    "@std/async": "jsr:@std/async@1",
    "@std/collections": "jsr:@std/collections@1",
    "@std/fmt/colors": "jsr:@std/fmt@1/colors",
    "@std/fs": "jsr:@std/fs@1",
    "@std/html": "jsr:@std/html@1/entities",
    "@std/html/is-valid-custom-element-name": "jsr:@std/html@1/unstable-is-valid-custom-element-name",
    "@std/http": "jsr:@std/http@1",
    "@std/http/route": "jsr:@std/http@1/unstable-route",
    "@std/io": "jsr:@std/io@^0.224",
    "@std/jsonc": "jsr:@std/jsonc@1",
    "@std/path": "jsr:@std/path@1",
    "@std/regexp": "jsr:@std/regexp@1",
    "@std/text": "jsr:@std/text@1",
    "@std/yaml": "jsr:@std/yaml@1",
    // External dependencies
    "@dprint/formatter": "jsr:@dprint/formatter@^0.4",
    "@libs/bundle/ts": "jsr:@libs/bundle@12.4.1/ts",
    "@libs/logger": "jsr:@libs/logger@3",
    "@libs/reactive": "jsr:@libs/reactive@4",
    "@libs/run": "jsr:@libs/run@3",
    "@libs/testing": "jsr:@libs/testing@3",
    "@libs/typing": "jsr:@libs/typing@3",
    "@npm/jsdom": "npm:jsdom@25"
  },
  "workspace": [
    "@mizu/bind",
    "@mizu/clean",
    "@mizu/code",
    "@mizu/custom-element",
    "@mizu/eval",
    "@mizu/event",
    "@mizu/for",
    "@mizu/html",
    "@mizu/http",
    "@mizu/if",
    "@mizu/is",
    "@mizu/markdown",
    "@mizu/mizu",
    "@mizu/model",
    "@mizu/mustache",
    "@mizu/once",
    "@mizu/ref",
    "@mizu/refresh",
    "@mizu/render",
    "@mizu/set",
    "@mizu/show",
    "@mizu/skip",
    "@mizu/test",
    "@mizu/text",
    "@mizu/toc",
    "@mizu/unstable"
  ],
  "fmt": {
    "semiColons": false,
    "lineWidth": 280,
    "exclude": [
      "**/node_modules",
      "**/coverage",
      "**/.pages"
    ]
  },
  "lint": {
    "rules": {
      "include": [
        "ban-untagged-todo",
        "eqeqeq",
        "no-console",
        "no-eval",
        "no-external-import",
        "no-inferrable-types",
        "no-sync-fn-in-async-fn",
        "no-throw-literal",
        "single-var-declarator",
        "triple-slash-reference"
      ],
      "exclude": [
        "no-window"
      ]
    },
    "exclude": [
      "**/node_modules",
      "**/coverage",
      "**/.pages"
    ]
  },
  "publish": {
    "exclude": [
      ".devcontainer/**",
      ".github/**",
      "@mizu/**/*.html",
      "@mizu/**/*_test.ts",
      "www/**",
      "CONTRIBUTING.md",
      "vercel.json"
    ]
  },
  "compilerOptions": {
    "lib": [
      "dom",
      "deno.ns"
    ],
    "useUnknownInCatchVariables": false
  }
}
